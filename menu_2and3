#include <iostream>
#include <iomanip>

using namespace std;

//Global Variable
    const int SIZE = 20;
    string validUsers[SIZE] = {"user1","user2","user3"};
    string validPasswords[SIZE] = {"default","admin","123"};
    int validUsersSize = sizeof(validUsers)/sizeof(validUsers[0]);
    int validPasswordsSize = sizeof(validPasswords)/sizeof(validPasswords[0]);

    string registeredFNames[SIZE] = {"John","Jenny","Jack"};
    string registeredLNames[SIZE] = {"Cruz","Cabrera","Stalk"};
    char correspondingGender [SIZE] = {'M','F','M'};
    int correspondingMM [SIZE] = {5,1,6};
    int correspondingDD [SIZE] = {15,26,13};
    int correspondingYY [SIZE] = {2002,1998,1995};

    int ID;

    //NEWLY ADDED for Menu 2 and 3

    //Sports
    string extremeGames[] = {"Skydiving","Base Jumping","Paragliding","Bungee Jumping","Hand Gliding","Wingsuit Flying","Bodyflight","Sky Surfing","Ultralight Aviation"};
    int fees[] = {4000,1000,2000,1000,3000,3500,3000,4250,5000};
    int gameSize = sizeof(extremeGames)/sizeof(extremeGames[0]);
    //Mod
    int externalMod[9];

    //Function
    void DateSelection(int isNew);
    void DecemberSelection(int day,bool modify_);
    void DateConfirmationDecember(int day_,int e0,int e1,int e2,int e3,int e4,int e5,int e6,int e7,int e8);
    void JanuarySelection(int day,bool modify_);
    void DateConfirmationJanuary(int day_,int e0,int e1,int e2,int e3,int e4,int e5,int e6,int e7,int e8);
    void PromoCode();
    void Transaction(float pay_);

    //Purchase details
    float amountPaidF;
    float initialAmountF;
    float amountF;

    //Promo Code
    string promoCodes[] = {"XjD5S","5k83y","jjAEW","AEQxe","YrXmJ"};
    float codeDeduction[] = {10.0,25.0,30.0,35.0,40.0};
    int codeSize = sizeof(promoCodes)/sizeof(promoCodes[0]);

    //Transaction Method
    string paymentMethod[] = {"GCash","PayMaya","Card","PayPal"};

    //Temporary Function
    void LogIn(int isNew);

int main()
{
    LogIn(true);
    return 0;
}

void LogIn(int isNew)
{
    amountPaidF = 0; initialAmountF = 0; amountF = 50000;
    cout << "\nChoose Account: "; cin >> ID;
    cout << "Hello " << registeredFNames[ID] << " " << registeredLNames[ID] << endl; //Assuming we have login
    DateSelection(isNew);
}

//Menu 2
void DateSelection(int isNew)
{
    cout << "\nWe are open from December to January Only" << endl;
    cout << "Please Enter your preferred date" << endl;
    cout << "To look for a specific date, please follow the instructions." << endl;

    int m =-1, d = 29;
    while(!(m == 0 || m ==1))
    {
        cout << "Enter 0 for December, 1 for January\nMonth: "; cin >> m;
        if(m == 0)
        {
            while(!(d > 20 && d < 28))
            {
                cout << "What day in December? Choose from 21 to 27" << endl;
                cout << "Enter Day: "; cin >> d;

                if(d > 20 && d < 28)
                {
                    cout << "\nPLEASE WAIT..... Looking for what is available for December\n" << endl;
                    DecemberSelection(d,isNew);
                }else
                {
                     cout << "\nSorry try again! Please Choose a Valid Date" << endl;
                }
            }
        }else if(m == 1)
        {
            while(!(d > 0 && d < 6))
            {
                cout << "What day in January? Choose from 1 to 5" << endl;
                cout << "Enter Day: "; cin >> d;

                if(d > 0 && d < 6)
                {
                    cout << "\nPLEASE WAIT..... Looking for what is available for January\n" << endl;
                    JanuarySelection(d,isNew);
                }else
                {
                    cout << "\nSorry try again! Please Choose a Valid Date" << endl;
                }
            }
        }else
        {
            cout << "\nSorry, Please enter a valid month" << endl;
        }

    }
}

void DecemberSelection(int day_, bool modify_)
{
    int day = day_;

    if(day == 21)
    {
        int available[9];
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_ && day == 21)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
        }else
        {
            int ga[] = {0,-1,-1,3,-1,5,-1,7,-1}; //games available for this day if not modified
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = ga[i];
            }
        }

        cout << "For December " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationDecember(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }
    else if(day == 22)
    {
        int available[] = {-1,-1,-1,-1,-1,-1,-1,-1,-1};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For December " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationDecember(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 23)
    {
        int available[9];
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_ && day == 23)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
        }else
        {
            int ga[] = {0,-1,2,-1,4,-1,6,-1,8}; //games available for this day if not modified
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = ga[i];
            }
        }

        cout << "For December " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationDecember(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 24)
    {
        int available[] = {-1,1,-1,3,-1,5,-1,7,-1};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For December " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationDecember(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 25)
    {
        int available[] = {0,1,2,3,4,5,6,7,8};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For December " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationDecember(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 26)
    {
        int available[] = {0,1,2,3,4,5,6,7,8};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For December " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationDecember(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 27)
    {
        int available[] = {0,1,2,3,4,-1,-1,-1,-1};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For December " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationDecember(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }
}

void JanuarySelection(int day_, bool modify_)
{
    int day = day_;
    bool modify = modify_;

   if(day == 1)
    {
        int available[] = {0,1,2,3,4,5,6,7,8};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For January " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationJanuary(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }
    else if(day == 2)
    {
        int available[] = {-1,-1,-1,-1,-1,5,6,7,8};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For January " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationJanuary(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 3)
    {
        int available[] = {0,1,2,-1,-1,5,6,7,8};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For January " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationJanuary(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 4)
    {
        int available[] = {-1,-1,-1,3,4,5,6,7,-1};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For January " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationJanuary(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }else if(day == 5)
    {
        int available[] = {0,1,2,3,-1,-1,-1,-1,8};
        int arrSize = sizeof(available)/sizeof(available[0]);//Array size of availble extreme games

        //Modification
        if(!modify_)
        {
            for(int i = 0; i < arrSize; i++)
            {
                available[i] = externalMod[i];
            }
            PromoCode();
            return;
        }

        cout << "For January " << day << " The avaible Extreme Games are:" << endl;
        int j = 0;
        for(int i = 0; i < arrSize; i++)
        {
            if(available[i] == -1) //If the int value is -1 it will add j by 1
            {
                j++;
                if(j == arrSize) // if j will equal to arrSize, which means there are no available games
                    break;
            }
        }

        if(j != arrSize)
        {
            cout << "Please Choose from this Available Extreme Games" << endl;
            //Call the function DateConfirmation
            DateConfirmationJanuary(day,available[0],available[1],available[2],available[3],available[4],available[5],available[6],available[7],available[8]);
        }else
        {
            cout << "We are sorry but all of the Extreme Games here is being scheduled to someone else" << endl;
            cout << "Please choose another schedule\n" << endl;
            //Allow the user to pick another schedule
            DateSelection(true);
        }
    }
}

void DateConfirmationDecember(int day_,int e0,int e1,int e2,int e3,int e4,int e5,int e6,int e7,int e8)
{
    int elements[9];
    int eSize = sizeof(elements)/sizeof(elements[0]);
    elements[0] = e0;
    elements[1] = e1;
    elements[2] = e2;
    elements[3] = e3;
    elements[4] = e4;
    elements[5] = e5;
    elements[6] = e6;
    elements[7] = e7;
    elements[8] = e8;

    int day = day_;

    int internalMod[eSize] = {-1,-1,-1,-1,-1,-1,-1,-1,-1};

    float totalAmount = 0; //Total amount of all the cost of available extreme games
    cout << "-----------------------------" << endl;
    for(int i = 0; i < eSize;i++)
    {
        if(elements[i] != -1)
        {
            cout << extremeGames[elements[i]] << endl;
            totalAmount += fees[elements[i]];
        }
    }
    cout << "-----------------------------\n" << endl;

    //Transaction
    float initialAmount = 0;
    for(int i = 0; i < eSize; i++)
    {
        int r = -1;
        if(elements[i] != -1)
        {
            while(!(r == 0 || r == 1))
            {
                cout << "1 if YES; 0 if NO" << endl;
                cout << "Cost for this extreme game: " << fees[elements[i]] << endl;
                cout << "Do you want to try " << extremeGames[elements[i]] << "? ";
                cin >> r;
                if(r == 1)
                {
                    initialAmount += fees[elements[i]];
                    internalMod[elements[i]] = -1;
                }else if(r == 0){
                    internalMod[elements[i]] = elements[i];
                }else
                {
                    cout << "Please enter 0 or 1 only" << endl;
                }
            }
        }
    }

    /* Remove comment to see the internal modification array///
    for(int x: internalMod)
        cout << "mod: " << x << endl;
    //*/

    if(initialAmount == 0)
    {
        cout << "It seems like you have not chosen a single extreme games" << endl;
        cout << "Please enter your preferred date again\n" << endl;
        DateSelection(true);
    }else
    {
        cout << "\nPROCESSING....\n" << endl;
        cout <<"Due Amount: " << fixed << setprecision(2) << initialAmount << endl;
        initialAmountF = initialAmount;
        for(int i = 0; i < 9; i++)
        {
            externalMod[i] = internalMod[i];
        }
        PromoCode();
    }
}

void DateConfirmationJanuary(int day_,int e0,int e1,int e2,int e3,int e4,int e5,int e6,int e7,int e8)
{
    int elements[9];
    int eSize = sizeof(elements)/sizeof(elements[0]);
    elements[0] = e0;
    elements[1] = e1;
    elements[2] = e2;
    elements[3] = e3;
    elements[4] = e4;
    elements[5] = e5;
    elements[6] = e6;
    elements[7] = e7;
    elements[8] = e8;

    int day = day_;

    int internalMod[eSize] = {-1,-1,-1,-1,-1,-1,-1,-1,-1};

    float totalAmount = 0; //Total amount of all the cost of available extreme games
    cout << "-----------------------------" << endl;
    for(int i = 0; i < eSize;i++)
    {
        if(elements[i] != -1)
        {
            cout << extremeGames[elements[i]] << endl;
            totalAmount += fees[elements[i]];
        }
    }
    cout << "-----------------------------\n" << endl;

    //Transaction
    float initialAmount = 0;
    for(int i = 0; i < eSize; i++)
    {
        int r = -1;
        if(elements[i] != -1)
        {
            while(!(r == 0 || r == 1))
            {
                cout << "1 if YES; 0 if NO" << endl;
                cout << "Cost for this extreme game: " << fees[elements[i]] << endl;
                cout << "Do you want to try " << extremeGames[elements[i]] << "? ";
                cin >> r;
                if(r == 1)
                {
                    initialAmount += fees[elements[i]];
                    internalMod[elements[i]] = -1;
                }else if(r == 0){
                    internalMod[elements[i]] = elements[i];
                }else
                {
                    cout << "Please enter 0 or 1 only" << endl;
                }
            }
        }
    }

    /* Remove comment to see the internal modification array///
    for(int x: internalMod)
        cout << "mod: " << x << endl;
    //*/

    if(initialAmount == 0)
    {
        cout << "It seems like you have not chosen a single extreme games" << endl;
        cout << "Please enter your preferred date again\n" << endl;
        DateSelection(true);
    }else
    {
        cout << "\nPROCESSING....\n" << endl;
        cout <<"Due Amount: " << fixed << setprecision(2) << initialAmount << endl;
        initialAmountF = initialAmount;
        for(int i = 0; i < 9; i++)
        {
            externalMod[i] = internalMod[i];
        }

        JanuarySelection(day,false);
    }
}

void PromoCode()
{
     /* Remove comment to see the updated available games///
    for(int x : externalMod)
        cout << extremeGames[x] << endl;
    //*/

    int r = -1;
    bool codeRedeemed = false;
    float discount = 0;
    string code;

    while(!(r == 1 || r == 0))
    {
        cout << "Enter 0 if NO; 1 if YES" << endl;
        cout << "Do you have a Promo Code? "; cin >> r;

        if(r == 1)
        {
            while(!codeRedeemed)
            {
                cout << "Please Enter A Valid Code: "; cin >> code;
                if(code != "INVALID")
                {
                    for(int i = 0; i < codeSize; i++)
                    {
                        if(promoCodes[i] == code)
                        {
                            promoCodes[i] = "INVALID";
                            codeRedeemed = true;
                            discount = codeDeduction[i];
                            break;
                        }else
                        {
                            cout << "......" << endl;
                        }
                    }
                }else
                {
                    cout << "\nPlease Enter a Valid Code" << endl;
                }
            }
        }else if(r == 0)
        {
            cout << "" << endl;
            Transaction(initialAmountF);
        }else
        {
            cout << "\nSorry you can only enter 0 or 1" << endl;
        }
    }


    if(codeRedeemed)
    {
        cout << "\nSuccessfully Redeemed" << endl;
        /* Remove comment to see the promo codes array///
        for(string x : promoCodes)
        {
            cout << x << endl;
        }
        //*/

        cout << "You have " << fixed << setprecision(0) << discount << "% Discount.\n" << endl;
        float deduct = discount/100;
        float pay = initialAmountF - (initialAmountF * deduct);
        Transaction(pay);
    }
}

//Menu 3
void Transaction(float pay_)
{
    float amountDue = pay_;
    cout << "Amount Due: " << fixed << setprecision(2) << amountDue << endl;

    int paymentMode = -1;

    while(!(paymentMode > -1 && paymentMode < 4))
    {
        cout << "Payment Method" << endl;
        cout << "0 - GCash\n1 - PayMaya\n2 - Card\n3 - PayPal" << endl;
        cout << "Selected Payment Method: "; cin >> paymentMode; cout << "\n" << endl;
        if(paymentMode == 0) //GCash
        {
            cout << paymentMethod[paymentMode] << " has been selected" << endl;
            string mobile,pin;

            cout << "Enter Mobile Number: "; cin >> mobile;
            cout << "Enter PIN: "; cin >> pin;

            cout << "\nAccount Balance: " << fixed << setprecision(2) << amountF << endl;

            while(amountPaidF != amountDue)
            {
                cout << "Please Pay the exact amount: "; cin >> amountPaidF;
                if(amountPaidF == amountDue)
                {
                    amountF -= amountDue;
                    cout << "\nYour New Balance: " << fixed << setprecision(2) << amountF << endl;
                    cout << "Transaction Complete. Thank You " << registeredFNames[ID] << " " << registeredLNames[ID] << endl;
                    LogIn(false);
                }else
                {
                    cout << "\nTo complete this transaction, pay the exact amount.\n" << endl;
                }
            }

        }else if(paymentMode == 1) //PayMaya
        {
            cout << paymentMethod[paymentMode] << " has been selected" << endl;
            string email,password,otp;

            cout << "Enter Email or Mobile no."; cin >> email;
            cout << "Enter Password: " ; cin >> password;
            cout << "Enter OTP: " ; cin >> otp;

           cout << "\nAccount Balance: " << fixed << setprecision(2) << amountF << endl;

            while(amountPaidF != amountDue)
            {
                cout << "Please Pay the exact amount: "; cin >> amountPaidF;
                if(amountPaidF == amountDue)
                {
                    amountF -= amountDue;
                    cout << "\nYour New Balance: " << fixed << setprecision(2) << amountF << endl;
                    cout << "Transaction Complete. Thank You " << registeredFNames[ID] << " " << registeredLNames[ID] << endl;
                }else
                {
                    cout << "\nTo complete this transaction, pay the exact amount.\n" << endl;
                }
            }

        }else if(paymentMode == 2) //Card
        {
            cout << paymentMethod[paymentMode] << " has been selected" << endl;
            string nameOnCard,cardNumber,exp,cvv,postalCode;

            cout << "Name on card: "; cin >> nameOnCard;
            cout << "Credit Card Number: "; cin >> cardNumber;
            cout << "Expiration: "; cin >> exp;
            cout << "CVV: "; cin >> cvv;
            cout << "Postal Code: "; cin >> postalCode;

            cout << "\nAccount Balance: " << fixed << setprecision(2) << amountF << endl;

            while(amountPaidF != amountDue)
            {
                cout << "Please Pay the exact amount: "; cin >> amountPaidF;
                if(amountPaidF == amountDue)
                {
                    amountF -= amountDue;
                    cout << "\nYour New Balance: " << fixed << setprecision(2) << amountF << endl;
                    cout << "Transaction Complete. Thank You " << registeredFNames[ID] << " " << registeredLNames[ID] << endl;
                }else
                {
                    cout << "\nTo complete this transaction, pay the exact amount.\n" << endl;
                }
            }

        }else if(paymentMode == 3) //PayPal
        {
            cout << paymentMethod[paymentMode] << " has been selected" << endl;
            string email,password;

            cout << "Enter Email or Mobile number: "; cin >> email;
            cout << "Password or One-time Code: "; cin >> password;

            cout << "\nAccount Balance: " << fixed << setprecision(2) << amountF << endl;

            while(amountPaidF != amountDue)
            {
                cout << "Please Pay the exact amount: "; cin >> amountPaidF;
                if(amountPaidF == amountDue)
                {
                    amountF -= amountDue;
                    cout << "\nYour New Balance: " << fixed << setprecision(2) << amountF << endl;
                    cout << "Transaction Complete. Thank You " << registeredFNames[ID] << " " << registeredLNames[ID] << endl;
                }else
                {
                    cout << "\nTo complete this transaction, pay the exact amount.\n" << endl;
                }
            }
        }else
        {
            cout << "Sorry you can only choose 0 to 3 for Payment Method" << endl;
        }
    }
}
